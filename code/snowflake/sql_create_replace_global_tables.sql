-- Create/Replace actor table
create or replace TABLE HACK_DATA.PUBLIC.ACTOR (
	ID NUMBER(38,0) NOT NULL,
	LOGIN VARCHAR(255),
	GRAVATAR_ID VARCHAR(255),
	URL VARCHAR(255),
	AVATAR_URL VARCHAR(255),
	primary key (ID)
);

-- Create/Replace repo table
create or replace TABLE HACK_DATA.PUBLIC.REPO (
	ID NUMBER(38,0) NOT NULL,
	NAME VARCHAR(255),
	URL VARCHAR(255),
	primary key (ID)
);

-- Create/Replace repo table
create or replace TABLE HACK_DATA.PUBLIC.ORG (
	ID NUMBER(38,0) NOT NULL,
	LOGIN VARCHAR(255),
    GRAVATAR_ID VARCHAR(255),
	URL VARCHAR(255),
    AVATAR_URL VARCHAR(255),
	primary key (ID)
);

-- Create/Replace global events table
-- NOTE: Make sure actor, repo and org table were created
create or replace TABLE HACK_DATA.PUBLIC.GLOBAL_EVENTS (
	ID NUMBER(38,0) NOT NULL,
	TYPE VARCHAR(255),
	ACTOR_ID NUMBER(38,0),
	REPO_ID NUMBER(38,0),
    ORG_ID NUMBER(38,0),
	PUBLIC BOOLEAN,
	CREATED_AT TIMESTAMP_NTZ(9),
	primary key (ID),
	foreign key (ACTOR_ID) references HACK_DATA.PUBLIC.ACTOR(ID),
	foreign key (REPO_ID) references HACK_DATA.PUBLIC.REPO(ID),
    foreign key (ORG_ID) references HACK_DATA.PUBLIC.ORG(ID)
);


-- CREATE TABLE script for GITHUB_EVENTS_WIDE.
create or replace TABLE HACK_DATA.PUBLIC.GITHUB_EVENTS_WIDE (
    ID NUMBER(38,0) NOT NULL,
    PAYLOAD_CREATED_AT TIMESTAMP_NTZ NULL,
    ISSUE_CLOSED_AT TIMESTAMP_NTZ NULL,
    ISSUE_URL VARCHAR NULL,
    MERGE_AT TIMESTAMP_NTZ NULL,
    LANGUAGE VARCHAR NULL, 
    RELEASE_PUBLISHED_AT TIMESTAMP_NTZ NULL,
    REVIEW_SUBMITTED_AT TIMESTAMP_NTZ NULL,
    primary key (ID),
    foreign key (ID) references HACK_DATA.PUBLIC.GLOBAL_EVENTS(ID)
);

-- Create/Replace processed table
create or replace TABLE HACK_DATA.PUBLIC.PROCESSED (
	TYPE VARCHAR(255),
	LOGIN VARCHAR(255),
    REPO_NAME VARCHAR(255),
	PUBLIC BOOLEAN,
    LOGIN_ORG VARCHAR(255),
    WEEKDAY_NUMBER_CREATED NUMBER(38,0),
    WEEKDAY_CREATED VARCHAR(255),
	CREATED_HOUR TIME,
	CREATED_DATE DATE,
    LANGUAGE VARCHAR(255),
    HAS_ISSUE BOOLEAN,
    "SUM(MERGE_TIME)" NUMBER(38,0),
    "SUM(PR_REVIEW_TIME)" NUMBER(38,0),
    "SUM(CLOSE_ISSUE_TIME)" NUMBER(38,0),
    "COUNT(TYPE)" NUMBER(38,0)
);
-- Create/Replace actor table
create or replace TABLE HACK_DATA.PUBLIC.ACTOR (
	ID NUMBER(38,0) NOT NULL,
	LOGIN VARCHAR(255),
	GRAVATAR_ID VARCHAR(255),
	URL VARCHAR(255),
	AVATAR_URL VARCHAR(255),
	primary key (ID)
);

-- Create/Replace repo table
create or replace TABLE HACK_DATA.PUBLIC.REPO (
	ID NUMBER(38,0) NOT NULL,
	NAME VARCHAR(255),
	URL VARCHAR(255),
	primary key (ID)
);

-- Create/Replace repo table
create or replace TABLE HACK_DATA.PUBLIC.ORG (
	ID NUMBER(38,0) NOT NULL,
	LOGIN VARCHAR(255),
    GRAVATAR_ID VARCHAR(255),
	URL VARCHAR(255),
    AVATAR_URL VARCHAR(255),
	primary key (ID)
);

-- Create/Replace global events table
-- NOTE: Make sure actor, repo and org table were created
create or replace TABLE HACK_DATA.PUBLIC.GLOBAL_EVENTS (
	ID NUMBER(38,0) NOT NULL,
	TYPE VARCHAR(255),
	ACTOR_ID NUMBER(38,0),
	REPO_ID NUMBER(38,0),
    ORG_ID NUMBER(38,0),
	PUBLIC BOOLEAN,
	CREATED_AT TIMESTAMP_NTZ(9),
	primary key (ID),
	foreign key (ACTOR_ID) references HACK_DATA.PUBLIC.ACTOR(ID),
	foreign key (REPO_ID) references HACK_DATA.PUBLIC.REPO(ID),
    foreign key (ORG_ID) references HACK_DATA.PUBLIC.ORG(ID)
);


-- CREATE TABLE script for GITHUB_EVENTS_WIDE.
create or replace TABLE HACK_DATA.PUBLIC.GITHUB_EVENTS_WIDE (
    ID NUMBER(38,0) NOT NULL,
    PAYLOAD_CREATED_AT TIMESTAMP_NTZ NULL,
    ISSUE_CLOSED_AT TIMESTAMP_NTZ NULL,
    ISSUE_URL VARCHAR NULL,
    MERGE_AT TIMESTAMP_NTZ NULL,
    LANGUAGE VARCHAR NULL, 
    RELEASE_PUBLISHED_AT TIMESTAMP_NTZ NULL,
    REVIEW_SUBMITTED_AT TIMESTAMP_NTZ NULL,
    primary key (ID),
    foreign key (ID) references HACK_DATA.PUBLIC.GLOBAL_EVENTS(ID)
);

-- Create/Replace processed table
create or replace TABLE HACK_DATA.PUBLIC.PROCESSED (
	TYPE VARCHAR(255),
	LOGIN VARCHAR(255),
    REPO_NAME VARCHAR(255),
	PUBLIC BOOLEAN,
    LOGIN_ORG VARCHAR(255),
    WEEKDAY_NUMBER_CREATED NUMBER(38,0),
    WEEKDAY_CREATED VARCHAR(255),
	CREATED_HOUR TIME,
	CREATED_DATE DATE,
    LANGUAGE VARCHAR(255),
    HAS_ISSUE BOOLEAN,
    "SUM(MERGE_TIME)" NUMBER(38,0),
    "SUM(PR_REVIEW_TIME)" NUMBER(38,0),
    "SUM(CLOSE_ISSUE_TIME)" NUMBER(38,0),
    "COUNT(TYPE)" NUMBER(38,0)
);
